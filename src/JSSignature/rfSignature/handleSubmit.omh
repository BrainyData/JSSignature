;  called when client clicks the submit button

;  convert data src to raw PNG (required)
;
;  this is a step required after receiving signature data
;  as the signature data is in base64 encoded asset format
;  $decodesignature will return PNG raw data in ivSignature
Do jsSignatureBD.$decodesignature(ivSignature) Returns #F

If flag true
	;  create PDF file to combine text and signature     ;; (optional feature, requires PDFDevice)
	;  Do code method code/PrintPdf (con($cinst().$fullname,".$pdfoutput(#)"),ivDocument,ivSignature)
	;  Do $cdevice.$assign(kDevPdf)
	Do $cdevice.$assign(kDevPdf)
	Set report name rPdf
	Print report {* (cvReportNotation,ivDocument,ivSignature)}
	
	;  assign embed tag to our HTML control that is to display the PDF     ;; (optional feature, requires PDFDevice)
	;  this will cause a client call to our PDF handling remote task
	;  this task will return the PDF data for the embed control
	Calculate $cinst.$objs.ctrlEmbedPdf.$html as ivEmbedTag
	Calculate $cinst.$objs.ctrlPages.$currentpage as 2
Else
	;  something has gone wrong
	Do $cinst.$showmessage("An error occured while processing the signature data.")
End If
Quit method